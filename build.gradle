plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
}

group = 'team.lindo'
version = '0.0.1'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21)) // 'set' 메소드 사용
    }
}

repositories {
    mavenCentral() // Maven Central 저장소 추가
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // MySQL JDBC Driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Testing
    testImplementation 'com.tngtech.archunit:archunit:1.1.0'  // 패키지 의존성 검증 위한 ArchUnit 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

def querydslDir = "build/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += [querydslDir]
        }
    }
}


tasks.withType(Copy) {
    setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

tasks.withType(Jar) {
    setDuplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

tasks.named('test') {
    useJUnitPlatform()
}